version: '3.8'
services:
  web:
    build: .
    volumes:
      - static:/app/static
    command: gunicorn --workers=2 dop3pod.wsgi -b 0.0.0.0:8000
    env_file:
      - ./.docker-env
    expose:
      - 8000
    depends_on:
      - postgres
    image: web-image
    networks:
      - main
    restart: on-failure
  nginx:
    build: ./nginx
    volumes:
      - static:/app/static
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - main
  postgres:
    image: postgres:13-alpine
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    env_file:
      - ./.docker-env
    ports:
      - "5432:5432"
    restart: on-failure
    networks:
      - main
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - main
    restart: on-failure
  celery_worker:
    command: celery -A dop3pod worker -l info
    user: nobody
    env_file:
      - ./.docker-env
    depends_on:
      - redis
      - postgres
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    image: web-image
    networks:
      - main
    restart: on-failure

networks:
  main:

volumes:
  pgdata:
  static:
