version: '3.8'
services:
  dop3pod:
    container_name: dop3pod
    build: .
    volumes:
      - ./dop3pod:/dop3pod
    command: >
      sh -c "wait-for postgres:5432 &&
             python manage.py migrate &&
             gunicorn --workers=2 dop3pod.wsgi -b 0.0.0.0:8000"
    env_file:
      - ./.docker-env
    depends_on:
      - postgres
      - redis
    expose:
      - "8000"
    hostname: dop3pod
    image: dop3pod-image
    networks:
      - main
    restart: on-failure
  nginx:
    build: ./nginx
    volumes:
      - staticfiles:/dop3pod/static/
    ports:
      - 1337:80
    depends_on:
      - dop3pod
  postgres:
    image: postgres:13-alpine
    container_name: postgres
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    env_file:
      - ./.docker-env
    hostname: postgres
    ports:
      - "5432:5432"
    restart: on-failure
    networks:
      - main
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - main
    restart: on-failure
  celery_worker:
    command: sh -c "wait-for redis:6379 && wait-for dop3pod:8000 -- celery -A dop3pod worker -l info"
    user: nobody
    env_file:
      - ./.docker-env
    depends_on:
      - dop3pod
      - postgres
      - redis
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    image: dop3pod-image
    networks:
      - main
    restart: on-failure

networks:
  main:

volumes:
  pgdata:
  staticfiles:
